// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NutellaTinderEllaApi.Data;

#nullable disable

namespace NutellaTinderElla.Migrations
{
    [DbContext(typeof(TinderDbContext))]
    partial class TinderDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NutellaTinderElla.Data.Models.Like", b =>
                {
                    b.Property<int>("LikerId")
                        .HasColumnType("int");

                    b.Property<int>("LikedUserId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("LikerId", "LikedUserId");

                    b.HasIndex("LikedUserId");

                    b.ToTable("Likes");
                });

            modelBuilder.Entity("NutellaTinderElla.Data.Models.Match", b =>
                {
                    b.Property<int>("MacherId")
                        .HasColumnType("int");

                    b.Property<int>("MatchedUserId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("MacherId", "MatchedUserId");

                    b.HasIndex("MatchedUserId");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("NutellaTinderElla.Data.Models.Swipes", b =>
                {
                    b.Property<int>("SwiperId")
                        .HasColumnType("int");

                    b.Property<int>("SwipedUserId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("SwiperId", "SwipedUserId");

                    b.HasIndex("SwipedUserId");

                    b.ToTable("Swipes");
                });

            modelBuilder.Entity("NutellaTinderEllaApi.Data.Models.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsLiked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsViewed")
                        .HasColumnType("bit");

                    b.Property<int>("ReceiverId")
                        .HasColumnType("int");

                    b.Property<int>("SenderId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeViewed")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("SenderId");

                    b.ToTable("Message");
                });

            modelBuilder.Entity("NutellaTinderEllaApi.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("AgePreferenceMaximum")
                        .HasColumnType("int");

                    b.Property<int>("AgePreferenceMinimum")
                        .HasColumnType("int");

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<int>("GenderPreference")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Seeking")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 28,
                            AgePreferenceMaximum = 35,
                            AgePreferenceMinimum = 25,
                            Bio = "Passionate about travel, cooking, and outdoor adventures. Looking for someone to explore new cuisines and hiking trails with. Let's create memories together!",
                            Email = "emily.johnson@example.com",
                            Gender = 1,
                            GenderPreference = 1,
                            Name = "Emily Johnson",
                            PhoneNumber = "555-123-4567",
                            Picture = "emily_profile_picture.jpg",
                            Seeking = 0
                        },
                        new
                        {
                            Id = 2,
                            Age = 32,
                            AgePreferenceMaximum = 40,
                            AgePreferenceMinimum = 28,
                            Bio = "Tech enthusiast, coffee lover, and avid reader. Seeking meaningful connections and engaging conversations. Let's explore the city together!",
                            Email = "john.smith@example.com",
                            Gender = 0,
                            GenderPreference = 2,
                            Name = "John Smith",
                            PhoneNumber = "555-987-6543",
                            Picture = "john_profile_picture.jpg",
                            Seeking = 1
                        },
                        new
                        {
                            Id = 3,
                            Age = 25,
                            AgePreferenceMaximum = 30,
                            AgePreferenceMinimum = 20,
                            Bio = "Passionate about art, music, and nature. Looking for someone who shares similar interests and enjoys spontaneous adventures.",
                            Email = "olivia.brown@example.com",
                            Gender = 1,
                            GenderPreference = 0,
                            Name = "Olivia Brown",
                            PhoneNumber = "555-555-5555",
                            Picture = "olivia_profile_picture.jpg",
                            Seeking = 1
                        },
                        new
                        {
                            Id = 4,
                            Age = 30,
                            AgePreferenceMaximum = 35,
                            AgePreferenceMinimum = 25,
                            Bio = "Fitness enthusiast, foodie, and travel addict. Seeking someone to join me on my next hiking trip and explore new culinary delights.",
                            Email = "michael.johnson@example.com",
                            Gender = 0,
                            GenderPreference = 1,
                            Name = "Michael Johnson",
                            PhoneNumber = "555-222-3333",
                            Picture = "michael_profile_picture.jpg",
                            Seeking = 1
                        },
                        new
                        {
                            Id = 5,
                            Age = 27,
                            AgePreferenceMaximum = 33,
                            AgePreferenceMinimum = 23,
                            Bio = "Bookworm, animal lover, and adventure seeker. Looking for someone who values intellectual conversations and enjoys outdoor activities.",
                            Email = "sophia.martinez@example.com",
                            Gender = 1,
                            GenderPreference = 0,
                            Name = "Sophia Martinez",
                            PhoneNumber = "555-777-8888",
                            Picture = "sophia_profile_picture.jpg",
                            Seeking = 0
                        },
                        new
                        {
                            Id = 6,
                            Age = 29,
                            AgePreferenceMaximum = 35,
                            AgePreferenceMinimum = 25,
                            Bio = "Gamer, movie buff, and pizza enthusiast. Seeking someone to binge-watch Netflix series and share a slice of pizza with.",
                            Email = "daniel.wilson@example.com",
                            Gender = 0,
                            GenderPreference = 2,
                            Name = "Daniel Wilson",
                            PhoneNumber = "555-444-5555",
                            Picture = "daniel_profile_picture.jpg",
                            Seeking = 0
                        },
                        new
                        {
                            Id = 7,
                            Age = 26,
                            AgePreferenceMaximum = 32,
                            AgePreferenceMinimum = 22,
                            Bio = "Nature lover, coffee addict, and amateur photographer. Seeking someone who appreciates sunsets, coffee dates, and long walks in the park.",
                            Email = "emma.taylor@example.com",
                            Gender = 1,
                            GenderPreference = 1,
                            Name = "Emma Taylor",
                            PhoneNumber = "555-999-1111",
                            Picture = "emma_profile_picture.jpg",
                            Seeking = 1
                        },
                        new
                        {
                            Id = 8,
                            Age = 31,
                            AgePreferenceMaximum = 38,
                            AgePreferenceMinimum = 28,
                            Bio = "Tech geek, foodie, and aspiring chef. Looking for someone who enjoys experimenting with new recipes and binge-watching sci-fi movies.",
                            Email = "liam.anderson@example.com",
                            Gender = 0,
                            GenderPreference = 0,
                            Name = "Liam Anderson",
                            PhoneNumber = "555-333-2222",
                            Picture = "liam_profile_picture.jpg",
                            Seeking = 0
                        },
                        new
                        {
                            Id = 9,
                            Age = 28,
                            AgePreferenceMaximum = 35,
                            AgePreferenceMinimum = 25,
                            Bio = "Music lover, traveler, and coffee connoisseur. Seeking someone who enjoys spontaneous road trips, live music, and lazy Sundays.",
                            Email = "ava.thomas@example.com",
                            Gender = 1,
                            GenderPreference = 2,
                            Name = "Ava Thomas",
                            PhoneNumber = "555-666-9999",
                            Picture = "ava_profile_picture.jpg",
                            Seeking = 1
                        },
                        new
                        {
                            Id = 10,
                            Age = 29,
                            AgePreferenceMaximum = 35,
                            AgePreferenceMinimum = 25,
                            Bio = "Adventure seeker, adrenaline junkie, and thrill-seeker. Looking for someone who shares a passion for extreme sports and outdoor adventures.",
                            Email = "ethan.walker@example.com",
                            Gender = 0,
                            GenderPreference = 1,
                            Name = "Ethan Walker",
                            PhoneNumber = "555-111-7777",
                            Picture = "ethan_profile_picture.jpg",
                            Seeking = 1
                        },
                        new
                        {
                            Id = 11,
                            Age = 26,
                            AgePreferenceMaximum = 33,
                            AgePreferenceMinimum = 23,
                            Bio = "Art enthusiast, wine lover, and aspiring painter. Seeking someone who appreciates creativity, fine wine, and deep conversations.",
                            Email = "isabella.garcia@example.com",
                            Gender = 1,
                            GenderPreference = 0,
                            Name = "Isabella Garcia",
                            PhoneNumber = "555-888-2222",
                            Picture = "isabella_profile_picture.jpg",
                            Seeking = 0
                        });
                });

            modelBuilder.Entity("NutellaTinderElla.Data.Models.Like", b =>
                {
                    b.HasOne("NutellaTinderEllaApi.Data.Models.User", "LikedUser")
                        .WithMany()
                        .HasForeignKey("LikedUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("NutellaTinderEllaApi.Data.Models.User", "Liker")
                        .WithMany("Likes")
                        .HasForeignKey("LikerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("LikedUser");

                    b.Navigation("Liker");
                });

            modelBuilder.Entity("NutellaTinderElla.Data.Models.Match", b =>
                {
                    b.HasOne("NutellaTinderEllaApi.Data.Models.User", "Matcher")
                        .WithMany("Matches")
                        .HasForeignKey("MacherId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("NutellaTinderEllaApi.Data.Models.User", "MatchedUser")
                        .WithMany()
                        .HasForeignKey("MatchedUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MatchedUser");

                    b.Navigation("Matcher");
                });

            modelBuilder.Entity("NutellaTinderElla.Data.Models.Swipes", b =>
                {
                    b.HasOne("NutellaTinderEllaApi.Data.Models.User", "SwipedUser")
                        .WithMany()
                        .HasForeignKey("SwipedUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("NutellaTinderEllaApi.Data.Models.User", "Swiper")
                        .WithMany("Swipes")
                        .HasForeignKey("SwiperId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SwipedUser");

                    b.Navigation("Swiper");
                });

            modelBuilder.Entity("NutellaTinderEllaApi.Data.Models.Message", b =>
                {
                    b.HasOne("NutellaTinderEllaApi.Data.Models.User", "Receiver")
                        .WithMany()
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("NutellaTinderEllaApi.Data.Models.User", "Sender")
                        .WithMany("Messages")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("NutellaTinderEllaApi.Data.Models.User", b =>
                {
                    b.Navigation("Likes");

                    b.Navigation("Matches");

                    b.Navigation("Messages");

                    b.Navigation("Swipes");
                });
#pragma warning restore 612, 618
        }
    }
}
